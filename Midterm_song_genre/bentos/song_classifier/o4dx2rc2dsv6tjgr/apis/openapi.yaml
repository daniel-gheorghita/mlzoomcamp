components:
  schemas:
    InternalServerError:
      description: Internal Server Error
      properties:
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - msg
      - type
      title: InternalServerError
      type: object
    InvalidArgument:
      description: Bad Request
      properties:
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - msg
      - type
      title: InvalidArgument
      type: object
    NotFound:
      description: Not Found
      properties:
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - msg
      - type
      title: NotFound
      type: object
    SongClassifierValidator:
      properties:
        danceability:
          maximum: 1
          minimum: 0
          title: Danceability
          type: number
        energy:
          maximum: 1
          minimum: 0
          title: Energy
          type: number
      required:
      - danceability
      - energy
      title: SongClassifierValidator
      type: object
info:
  contact:
    email: contact@bentoml.ai
    name: BentoML Team
  description: "# song_classifier:None\n\n[![pypi_status](https://img.shields.io/badge/BentoML-1.0.7-informational)](https://pypi.org/project/BentoML)\n\
    [![documentation_status](https://readthedocs.org/projects/bentoml/badge/?version=latest)](https://docs.bentoml.org/)\n\
    [![join_slack](https://badgen.net/badge/Join/BentoML%20Slack/cyan?icon=slack)](https://l.bentoml.com/join-slack-swagger)\n\
    [![BentoML GitHub Repo](https://img.shields.io/github/stars/bentoml/bentoml?style=social)](https://github.com/bentoml/BentoML)\n\
    [![Twitter Follow](https://img.shields.io/twitter/follow/bentomlai?label=Follow%20BentoML&style=social)](https://twitter.com/bentomlai)\n\
    \nThis is a Machine Learning Service created with BentoML.\n| InferenceAPI | Input\
    \ | Output |\n| ------------ | ----- | ------ |\n| POST [`/classify_song`](#operations-Service_APIs-song_classifier__classify_song)\
    \ | JSON | JSON |\n\n\n\n\n## Help\n\n* [\U0001F4D6 Documentation](https://docs.bentoml.org/en/latest/):\
    \ Learn how to use BentoML.\n* [\U0001F4AC Community](https://l.bentoml.com/join-slack-swagger):\
    \ Join the BentoML Slack community.\n* [\U0001F41B GitHub Issues](https://github.com/bentoml/BentoML/issues):\
    \ Report bugs and feature requests.\n* Tip: you can also [customize this README](https://docs.bentoml.org/en/latest/concepts/bento.html#description).\n"
  summary: A ML Service created with BentoML
  title: song_classifier
  version: None
openapi: 3.0.2
paths:
  /classify_song:
    post:
      description: ''
      operationId: song_classifier__classify_song
      requestBody:
        content:
          application/json:
            schema:
              properties:
                danceability:
                  maximum: 1
                  minimum: 0
                  title: Danceability
                  type: number
                energy:
                  maximum: 1
                  minimum: 0
                  title: Energy
                  type: number
              required:
              - danceability
              - energy
              title: SongClassifierValidator
              type: object
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
          description: Successful Response
        400:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgument'
          description: Bad Request
        404:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: Not Found
        500:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
          description: Internal Server Error
      summary: "InferenceAPI(JSON \u2192 JSON)"
      tags:
      - Service APIs
  /healthz:
    get:
      description: Health check endpoint. Expecting an empty response with status
        code <code>200</code> when the service is in health state. The <code>/healthz</code>
        endpoint is <b>deprecated</b>. (since Kubernetes v1.16)
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /livez:
    get:
      description: Health check endpoint for Kubernetes. Healthy endpoint responses
        with a <code>200</code> OK status.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /metrics:
    get:
      description: Prometheus metrics endpoint. The <code>/metrics</code> responses
        with a <code>200</code>. The output can then be used by a Prometheus sidecar
        to scrape the metrics of the service.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
  /readyz:
    get:
      description: A <code>200</code> OK status from <code>/readyz</code> endpoint
        indicated the service is ready to accept traffic. From that point and onward,
        Kubernetes will use <code>/livez</code> endpoint to perform periodic health
        checks.
      responses:
        '200':
          description: Successful Response
      tags:
      - Infrastructure
tags:
- description: BentoML Service API endpoints for inference.
  name: Service APIs
- description: Common infrastructure endpoints for observability.
  name: Infrastructure
